print("\u001b[1;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[1;32mIn[9], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m model \u001b[39m=\u001b[39m create_model(\u001b[39mlen\u001b[39;49m(tokenizer\u001b[39m.\u001b[39;49mvocab))\n\u001b[0;32m      3\u001b[0m model\u001b[39m.\u001b[39mcompile(\n\u001b[0;32m      4\u001b[0m \toptimizer \u001b[39m=\u001b[39m AdamW(learning_rate \u001b[39m=\u001b[39m \u001b[39m0.0\u001b[39m, weight_decay \u001b[39m=\u001b[39m WEIGHT_DECAY, beta_1 \u001b[39m=\u001b[39m BETA_1, beta_2 \u001b[39m=\u001b[39m BETA_2, clipnorm \u001b[39m=\u001b[39m CLIP_GRADIENTS),\n\u001b[0;32m      5\u001b[0m \tloss \u001b[39m=\u001b[39m \u001b[39m'\u001b[39m\u001b[39msparse_categorical_crossentropy\u001b[39m\u001b[39m'\u001b[39m,\n\u001b[0;32m      6\u001b[0m \tmetrics \u001b[39m=\u001b[39m [\u001b[39m'\u001b[39m\u001b[39maccuracy\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[0;32m      7\u001b[0m )\n\u001b[0;32m      9\u001b[0m model\u001b[39m.\u001b[39msummary()\n\nFile \u001b[1;32me:\\Angel\\Development\\Personal\\Language_model\\model.py:68\u001b[0m, in \u001b[0;36mcreate_model\u001b[1;34m(vocab_size)\u001b[0m\n\u001b[0;32m     64\u001b[0m \u001b[39minput\u001b[39m \u001b[39m=\u001b[39m Input(shape \u001b[39m=\u001b[39m (\u001b[39mNone\u001b[39;00m,), dtype \u001b[39m=\u001b[39m tf\u001b[39m.\u001b[39muint16, name \u001b[39m=\u001b[39m \u001b[39m'\u001b[39m\u001b[39minput\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[0;32m     66\u001b[0m embedding_layer \u001b[39m=\u001b[39m TokenEmbedding(vocab_size, EMBEDDING_DIM, MAX_CONTEXT, name \u001b[39m=\u001b[39m \u001b[39m'\u001b[39m\u001b[39mtoken_embedding\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[1;32m---> 68\u001b[0m token_embedding \u001b[39m=\u001b[39m embedding_layer(\u001b[39minput\u001b[39;49m)\n\u001b[0;32m     69\u001b[0m position_embedding \u001b[39m=\u001b[39m PositionEmbedding(MAX_CONTEXT, EMBEDDING_DIM, name \u001b[39m=\u001b[39m \u001b[39m'\u001b[39m\u001b[39mposition_embedding\u001b[39m\u001b[39m'\u001b[39m)(\u001b[39minput\u001b[39m)\n\u001b[0;32m     70\u001b[0m model \u001b[39m=\u001b[39m Add(name \u001b[39m=\u001b[39m \u001b[39m'\u001b[39m\u001b[39membedding_add\u001b[39m\u001b[39m'\u001b[39m)([token_embedding, position_embedding])\n\nFile \u001b[1;32me:\\Angel\\Development\\Personal\\Language_model\\venv\\lib\\site-packages\\keras\\utils\\traceback_utils.py:70\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m     67\u001b[0m     filtered_tb \u001b[39m=\u001b[39m _process_traceback_frames(e\u001b[39m.\u001b[39m__traceback__)\n\u001b[0;32m     68\u001b[0m     \u001b[39m# To get the full stack trace, call:\u001b[39;00m\n\u001b[0;32m     69\u001b[0m     \u001b[39m# `tf.debugging.disable_traceback_filtering()`\u001b[39;00m\n\u001b[1;32m---> 70\u001b[0m     \u001b[39mraise\u001b[39;00m e\u001b[39m.\u001b[39mwith_traceback(filtered_tb) \u001b[39mfrom\u001b[39;00m \u001b[39mNone\u001b[39;00m\n\u001b[0;32m     71\u001b[0m \u001b[39mfinally\u001b[39;00m:\n\u001b[0;32m     72\u001b[0m     \u001b[39mdel\u001b[39;00m filtered_tb\n\nFile \u001b[1;32m~\\AppData\\Local\\Temp\\__autograph_generated_fileblopxtcw.py:78\u001b[0m, in \u001b[0;36mouter_factory.<locals>.inner_factory.<locals>.tf__call\u001b[1;34m(self, inputs, transpose)\u001b[0m\n\u001b[0;32m     76\u001b[0m mask \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39mUndefined(\u001b[39m'\u001b[39m\u001b[39mmask\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[0;32m     77\u001b[0m embedding \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39mUndefined(\u001b[39m'\u001b[39m\u001b[39membedding\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[1;32m---> 78\u001b[0m ag__\u001b[39m.\u001b[39;49mif_stmt(ag__\u001b[39m.\u001b[39;49mnot_(ag__\u001b[39m.\u001b[39;49mld(transpose)), if_body_2, else_body_2, get_state_2, set_state_2, (\u001b[39m'\u001b[39;49m\u001b[39mdo_return\u001b[39;49m\u001b[39m'\u001b[39;49m, \u001b[39m'\u001b[39;49m\u001b[39mretval_\u001b[39;49m\u001b[39m'\u001b[39;49m, \u001b[39m'\u001b[39;49m\u001b[39minputs\u001b[39;49m\u001b[39m'\u001b[39;49m), \u001b[39m2\u001b[39;49m)\n\u001b[0;32m     79\u001b[0m \u001b[39mreturn\u001b[39;00m fscope\u001b[39m.\u001b[39mret(retval_, do_return)\n\nFile \u001b[1;32m~\\AppData\\Local\\Temp\\__autograph_generated_fileblopxtcw.py:36\u001b[0m, in \u001b[0;36mouter_factory.<locals>.inner_factory.<locals>.tf__call.<locals>.if_body_2\u001b[1;34m()\u001b[0m\n\u001b[0;32m     34\u001b[0m     \u001b[39mpass\u001b[39;00m\n\u001b[0;32m     35\u001b[0m ag__\u001b[39m.\u001b[39mif_stmt(ag__\u001b[39m.\u001b[39mconverted_call(ag__\u001b[39m.\u001b[39mld(tf)\u001b[39m.\u001b[39mshape, (ag__\u001b[39m.\u001b[39mld(inputs),), \u001b[39mNone\u001b[39;00m, fscope)[\u001b[39m1\u001b[39m] \u001b[39m>\u001b[39m ag__\u001b[39m.\u001b[39mld(\u001b[39mself\u001b[39m)\u001b[39m.\u001b[39mmax_context, if_body, else_body, get_state, set_state, (\u001b[39m'\u001b[39m\u001b[39minputs\u001b[39m\u001b[39m'\u001b[39m,), \u001b[39m1\u001b[39m)\n\u001b[1;32m---> 36\u001b[0m embedding \u001b[39m=\u001b[39m ag__\u001b[39m.\u001b[39;49mconverted_call(ag__\u001b[39m.\u001b[39;49mld(tf)\u001b[39m.\u001b[39;49mnn\u001b[39m.\u001b[39;49membedding_lookup, (ag__\u001b[39m.\u001b[39;49mld(\u001b[39mself\u001b[39;49m)\u001b[39m.\u001b[39;49membedding_matrix, ag__\u001b[39m.\u001b[39;49mld(inputs)), \u001b[39mNone\u001b[39;49;00m, fscope)\n\u001b[0;32m     38\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39mget_state_1\u001b[39m():\n\u001b[0;32m     39\u001b[0m     \u001b[39mreturn\u001b[39;00m (do_return, retval_)\n\n\u001b[1;31mTypeError\u001b[0m: Exception encountered when calling layer \"token_embedding\" (type TokenEmbedding).\n\nin user code:\n\n    File \"e:\\Angel\\Development\\Personal\\Language_model\\layers.py\", line 54, in call  *\n        embedding = tf.nn.embedding_lookup(self.embedding_matrix, inputs)\n\n    TypeError: Value passed to parameter 'indices' has DataType uint16 not in list of allowed values: int32, int64\n\n\nCall arguments received by layer \"token_embedding\" (type TokenEmbedding):\n  • inputs=tf.Tensor(shape=(None, None), dtype=uint16)\n  • transpose=False")
